{"mappings":"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","sources":["node_modules/@fullcalendar/daygrid/index.js","node_modules/@fullcalendar/daygrid/internal.js"],"sourcesContent":["import { createPlugin } from '@fullcalendar/core/index.js';\nimport { DayGridView as DayTableView, TableDateProfileGenerator } from './internal.js';\nimport '@fullcalendar/core/internal.js';\nimport '@fullcalendar/core/preact.js';\n\nvar index = createPlugin({\n    name: '@fullcalendar/daygrid',\n    initialView: 'dayGridMonth',\n    views: {\n        dayGrid: {\n            component: DayTableView,\n            dateProfileGeneratorClass: TableDateProfileGenerator,\n        },\n        dayGridDay: {\n            type: 'dayGrid',\n            duration: { days: 1 },\n        },\n        dayGridWeek: {\n            type: 'dayGrid',\n            duration: { weeks: 1 },\n        },\n        dayGridMonth: {\n            type: 'dayGrid',\n            duration: { months: 1 },\n            fixedWeekCount: true,\n        },\n        dayGridYear: {\n            type: 'dayGrid',\n            duration: { years: 1 },\n        },\n    },\n});\n\nexport { index as default };\n","import { injectStyles, createFormatter, BaseComponent, StandardEvent, buildSegTimeText, EventContainer, getSegAnchorAttrs, memoize, MoreLinkContainer, getSegMeta, DateComponent, getUniqueDomId, setRef, DayCellContainer, WeekNumberContainer, buildNavLinkAttrs, hasCustomDayCellContent, addMs, intersectRanges, addDays, SegHierarchy, buildEntryKey, intersectSpans, RefMap, sortEventSegs, isPropsEqual, buildEventRangeKey, BgEvent, renderFill, PositionCache, NowTimer, formatIsoMonthStr, formatDayString, Slicer, DateProfileGenerator, addWeeks, diffWeeks, getStickyHeaderDates, ViewContainer, SimpleScrollGrid, getStickyFooterScrollbar, renderScrollShim, DayHeader, DaySeriesModel, DayTableModel } from '@fullcalendar/core/internal.js';\nimport { createElement, Fragment, createRef } from '@fullcalendar/core/preact.js';\n\nvar css_248z = \":root{--fc-daygrid-event-dot-width:8px}.fc-daygrid-day-events:after,.fc-daygrid-day-events:before,.fc-daygrid-day-frame:after,.fc-daygrid-day-frame:before,.fc-daygrid-event-harness:after,.fc-daygrid-event-harness:before{clear:both;content:\\\"\\\";display:table}.fc .fc-daygrid-body{position:relative;z-index:1}.fc .fc-daygrid-day.fc-day-today{background-color:var(--fc-today-bg-color)}.fc .fc-daygrid-day-frame{min-height:100%;position:relative}.fc .fc-daygrid-day-top{display:flex;flex-direction:row-reverse}.fc .fc-day-other .fc-daygrid-day-top{opacity:.3}.fc .fc-daygrid-day-number{padding:4px;position:relative;z-index:4}.fc .fc-daygrid-month-start{font-size:1.1em;font-weight:700}.fc .fc-daygrid-day-events{margin-top:1px}.fc .fc-daygrid-body-balanced .fc-daygrid-day-events{left:0;position:absolute;right:0}.fc .fc-daygrid-body-unbalanced .fc-daygrid-day-events{min-height:2em;position:relative}.fc .fc-daygrid-body-natural .fc-daygrid-day-events{margin-bottom:1em}.fc .fc-daygrid-event-harness{position:relative}.fc .fc-daygrid-event-harness-abs{left:0;position:absolute;right:0;top:0}.fc .fc-daygrid-bg-harness{bottom:0;position:absolute;top:0}.fc .fc-daygrid-day-bg .fc-non-business{z-index:1}.fc .fc-daygrid-day-bg .fc-bg-event{z-index:2}.fc .fc-daygrid-day-bg .fc-highlight{z-index:3}.fc .fc-daygrid-event{margin-top:1px;z-index:6}.fc .fc-daygrid-event.fc-event-mirror{z-index:7}.fc .fc-daygrid-day-bottom{font-size:.85em;margin:0 2px}.fc .fc-daygrid-day-bottom:after,.fc .fc-daygrid-day-bottom:before{clear:both;content:\\\"\\\";display:table}.fc .fc-daygrid-more-link{border-radius:3px;cursor:pointer;line-height:1;margin-top:1px;max-width:100%;overflow:hidden;padding:2px;position:relative;white-space:nowrap;z-index:4}.fc .fc-daygrid-more-link:hover{background-color:rgba(0,0,0,.1)}.fc .fc-daygrid-week-number{background-color:var(--fc-neutral-bg-color);color:var(--fc-neutral-text-color);min-width:1.5em;padding:2px;position:absolute;text-align:center;top:0;z-index:5}.fc .fc-more-popover .fc-popover-body{min-width:220px;padding:10px}.fc-direction-ltr .fc-daygrid-event.fc-event-start,.fc-direction-rtl .fc-daygrid-event.fc-event-end{margin-left:2px}.fc-direction-ltr .fc-daygrid-event.fc-event-end,.fc-direction-rtl .fc-daygrid-event.fc-event-start{margin-right:2px}.fc-direction-ltr .fc-daygrid-more-link{float:left}.fc-direction-ltr .fc-daygrid-week-number{border-radius:0 0 3px 0;left:0}.fc-direction-rtl .fc-daygrid-more-link{float:right}.fc-direction-rtl .fc-daygrid-week-number{border-radius:0 0 0 3px;right:0}.fc-liquid-hack .fc-daygrid-day-frame{position:static}.fc-daygrid-event{border-radius:3px;font-size:var(--fc-small-font-size);position:relative;white-space:nowrap}.fc-daygrid-block-event .fc-event-time{font-weight:700}.fc-daygrid-block-event .fc-event-time,.fc-daygrid-block-event .fc-event-title{padding:1px}.fc-daygrid-dot-event{align-items:center;display:flex;padding:2px 0}.fc-daygrid-dot-event .fc-event-title{flex-grow:1;flex-shrink:1;font-weight:700;min-width:0;overflow:hidden}.fc-daygrid-dot-event.fc-event-mirror,.fc-daygrid-dot-event:hover{background:rgba(0,0,0,.1)}.fc-daygrid-dot-event.fc-event-selected:before{bottom:-10px;top:-10px}.fc-daygrid-event-dot{border:calc(var(--fc-daygrid-event-dot-width)/2) solid var(--fc-event-border-color);border-radius:calc(var(--fc-daygrid-event-dot-width)/2);box-sizing:content-box;height:0;margin:0 4px;width:0}.fc-direction-ltr .fc-daygrid-event .fc-event-time{margin-right:3px}.fc-direction-rtl .fc-daygrid-event .fc-event-time{margin-left:3px}\";\ninjectStyles(css_248z);\n\nfunction splitSegsByRow(segs, rowCnt) {\n    let byRow = [];\n    for (let i = 0; i < rowCnt; i += 1) {\n        byRow[i] = [];\n    }\n    for (let seg of segs) {\n        byRow[seg.row].push(seg);\n    }\n    return byRow;\n}\nfunction splitSegsByFirstCol(segs, colCnt) {\n    let byCol = [];\n    for (let i = 0; i < colCnt; i += 1) {\n        byCol[i] = [];\n    }\n    for (let seg of segs) {\n        byCol[seg.firstCol].push(seg);\n    }\n    return byCol;\n}\nfunction splitInteractionByRow(ui, rowCnt) {\n    let byRow = [];\n    if (!ui) {\n        for (let i = 0; i < rowCnt; i += 1) {\n            byRow[i] = null;\n        }\n    }\n    else {\n        for (let i = 0; i < rowCnt; i += 1) {\n            byRow[i] = {\n                affectedInstances: ui.affectedInstances,\n                isEvent: ui.isEvent,\n                segs: [],\n            };\n        }\n        for (let seg of ui.segs) {\n            byRow[seg.row].segs.push(seg);\n        }\n    }\n    return byRow;\n}\n\nconst DEFAULT_TABLE_EVENT_TIME_FORMAT = createFormatter({\n    hour: 'numeric',\n    minute: '2-digit',\n    omitZeroMinute: true,\n    meridiem: 'narrow',\n});\nfunction hasListItemDisplay(seg) {\n    let { display } = seg.eventRange.ui;\n    return display === 'list-item' || (display === 'auto' &&\n        !seg.eventRange.def.allDay &&\n        seg.firstCol === seg.lastCol && // can't be multi-day\n        seg.isStart && // \"\n        seg.isEnd // \"\n    );\n}\n\nclass TableBlockEvent extends BaseComponent {\n    render() {\n        let { props } = this;\n        return (createElement(StandardEvent, Object.assign({}, props, { elClasses: ['fc-daygrid-event', 'fc-daygrid-block-event', 'fc-h-event'], defaultTimeFormat: DEFAULT_TABLE_EVENT_TIME_FORMAT, defaultDisplayEventEnd: props.defaultDisplayEventEnd, disableResizing: !props.seg.eventRange.def.allDay })));\n    }\n}\n\nclass TableListItemEvent extends BaseComponent {\n    render() {\n        let { props, context } = this;\n        let { options } = context;\n        let { seg } = props;\n        let timeFormat = options.eventTimeFormat || DEFAULT_TABLE_EVENT_TIME_FORMAT;\n        let timeText = buildSegTimeText(seg, timeFormat, context, true, props.defaultDisplayEventEnd);\n        return (createElement(EventContainer, Object.assign({}, props, { elTag: \"a\", elClasses: ['fc-daygrid-event', 'fc-daygrid-dot-event'], elAttrs: getSegAnchorAttrs(props.seg, context), defaultGenerator: renderInnerContent, timeText: timeText, isResizing: false, isDateSelecting: false })));\n    }\n}\nfunction renderInnerContent(renderProps) {\n    return (createElement(Fragment, null,\n        createElement(\"div\", { className: \"fc-daygrid-event-dot\", style: { borderColor: renderProps.borderColor || renderProps.backgroundColor } }),\n        renderProps.timeText && (createElement(\"div\", { className: \"fc-event-time\" }, renderProps.timeText)),\n        createElement(\"div\", { className: \"fc-event-title\" }, renderProps.event.title || createElement(Fragment, null, \"\\u00A0\"))));\n}\n\nclass TableCellMoreLink extends BaseComponent {\n    constructor() {\n        super(...arguments);\n        this.compileSegs = memoize(compileSegs);\n    }\n    render() {\n        let { props } = this;\n        let { allSegs, invisibleSegs } = this.compileSegs(props.singlePlacements);\n        return (createElement(MoreLinkContainer, { elClasses: ['fc-daygrid-more-link'], dateProfile: props.dateProfile, todayRange: props.todayRange, allDayDate: props.allDayDate, moreCnt: props.moreCnt, allSegs: allSegs, hiddenSegs: invisibleSegs, alignmentElRef: props.alignmentElRef, alignGridTop: props.alignGridTop, extraDateSpan: props.extraDateSpan, popoverContent: () => {\n                let isForcedInvisible = (props.eventDrag ? props.eventDrag.affectedInstances : null) ||\n                    (props.eventResize ? props.eventResize.affectedInstances : null) ||\n                    {};\n                return (createElement(Fragment, null, allSegs.map((seg) => {\n                    let instanceId = seg.eventRange.instance.instanceId;\n                    return (createElement(\"div\", { className: \"fc-daygrid-event-harness\", key: instanceId, style: {\n                            visibility: isForcedInvisible[instanceId] ? 'hidden' : '',\n                        } }, hasListItemDisplay(seg) ? (createElement(TableListItemEvent, Object.assign({ seg: seg, isDragging: false, isSelected: instanceId === props.eventSelection, defaultDisplayEventEnd: false }, getSegMeta(seg, props.todayRange)))) : (createElement(TableBlockEvent, Object.assign({ seg: seg, isDragging: false, isResizing: false, isDateSelecting: false, isSelected: instanceId === props.eventSelection, defaultDisplayEventEnd: false }, getSegMeta(seg, props.todayRange))))));\n                })));\n            } }));\n    }\n}\nfunction compileSegs(singlePlacements) {\n    let allSegs = [];\n    let invisibleSegs = [];\n    for (let placement of singlePlacements) {\n        allSegs.push(placement.seg);\n        if (!placement.isVisible) {\n            invisibleSegs.push(placement.seg);\n        }\n    }\n    return { allSegs, invisibleSegs };\n}\n\nconst DEFAULT_WEEK_NUM_FORMAT = createFormatter({ week: 'narrow' });\nclass TableCell extends DateComponent {\n    constructor() {\n        super(...arguments);\n        this.rootElRef = createRef();\n        this.state = {\n            dayNumberId: getUniqueDomId(),\n        };\n        this.handleRootEl = (el) => {\n            setRef(this.rootElRef, el);\n            setRef(this.props.elRef, el);\n        };\n    }\n    render() {\n        let { context, props, state, rootElRef } = this;\n        let { options, dateEnv } = context;\n        let { date, dateProfile } = props;\n        // TODO: memoize this?\n        const isMonthStart = props.showDayNumber &&\n            shouldDisplayMonthStart(date, dateProfile.currentRange, dateEnv);\n        return (createElement(DayCellContainer, { elTag: \"td\", elRef: this.handleRootEl, elClasses: [\n                'fc-daygrid-day',\n                ...(props.extraClassNames || []),\n            ], elAttrs: Object.assign(Object.assign(Object.assign({}, props.extraDataAttrs), (props.showDayNumber ? { 'aria-labelledby': state.dayNumberId } : {})), { role: 'gridcell' }), defaultGenerator: renderTopInner, date: date, dateProfile: dateProfile, todayRange: props.todayRange, showDayNumber: props.showDayNumber, isMonthStart: isMonthStart, extraRenderProps: props.extraRenderProps }, (InnerContent, renderProps) => (createElement(\"div\", { ref: props.innerElRef, className: \"fc-daygrid-day-frame fc-scrollgrid-sync-inner\", style: { minHeight: props.minHeight } },\n            props.showWeekNumber && (createElement(WeekNumberContainer, { elTag: \"a\", elClasses: ['fc-daygrid-week-number'], elAttrs: buildNavLinkAttrs(context, date, 'week'), date: date, defaultFormat: DEFAULT_WEEK_NUM_FORMAT })),\n            !renderProps.isDisabled &&\n                (props.showDayNumber || hasCustomDayCellContent(options) || props.forceDayTop) ? (createElement(\"div\", { className: \"fc-daygrid-day-top\" },\n                createElement(InnerContent, { elTag: \"a\", elClasses: [\n                        'fc-daygrid-day-number',\n                        isMonthStart && 'fc-daygrid-month-start',\n                    ], elAttrs: Object.assign(Object.assign({}, buildNavLinkAttrs(context, date)), { id: state.dayNumberId }) }))) : props.showDayNumber ? (\n            // for creating correct amount of space (see issue #7162)\n            createElement(\"div\", { className: \"fc-daygrid-day-top\", style: { visibility: 'hidden' } },\n                createElement(\"a\", { className: \"fc-daygrid-day-number\" }, \"\\u00A0\"))) : undefined,\n            createElement(\"div\", { className: \"fc-daygrid-day-events\", ref: props.fgContentElRef },\n                props.fgContent,\n                createElement(\"div\", { className: \"fc-daygrid-day-bottom\", style: { marginTop: props.moreMarginTop } },\n                    createElement(TableCellMoreLink, { allDayDate: date, singlePlacements: props.singlePlacements, moreCnt: props.moreCnt, alignmentElRef: rootElRef, alignGridTop: !props.showDayNumber, extraDateSpan: props.extraDateSpan, dateProfile: props.dateProfile, eventSelection: props.eventSelection, eventDrag: props.eventDrag, eventResize: props.eventResize, todayRange: props.todayRange }))),\n            createElement(\"div\", { className: \"fc-daygrid-day-bg\" }, props.bgContent)))));\n    }\n}\nfunction renderTopInner(props) {\n    return props.dayNumberText || createElement(Fragment, null, \"\\u00A0\");\n}\nfunction shouldDisplayMonthStart(date, currentRange, dateEnv) {\n    const { start: currentStart, end: currentEnd } = currentRange;\n    const currentEndIncl = addMs(currentEnd, -1);\n    const currentFirstYear = dateEnv.getYear(currentStart);\n    const currentFirstMonth = dateEnv.getMonth(currentStart);\n    const currentLastYear = dateEnv.getYear(currentEndIncl);\n    const currentLastMonth = dateEnv.getMonth(currentEndIncl);\n    // spans more than one month?\n    return !(currentFirstYear === currentLastYear && currentFirstMonth === currentLastMonth) &&\n        Boolean(\n        // first date in current view?\n        date.valueOf() === currentStart.valueOf() ||\n            // a month-start that's within the current range?\n            (dateEnv.getDay(date) === 1 && date.valueOf() < currentEnd.valueOf()));\n}\n\nfunction computeFgSegPlacement(segs, // assumed already sorted\ndayMaxEvents, dayMaxEventRows, strictOrder, eventInstanceHeights, maxContentHeight, cells) {\n    let hierarchy = new DayGridSegHierarchy();\n    hierarchy.allowReslicing = true;\n    hierarchy.strictOrder = strictOrder;\n    if (dayMaxEvents === true || dayMaxEventRows === true) {\n        hierarchy.maxCoord = maxContentHeight;\n        hierarchy.hiddenConsumes = true;\n    }\n    else if (typeof dayMaxEvents === 'number') {\n        hierarchy.maxStackCnt = dayMaxEvents;\n    }\n    else if (typeof dayMaxEventRows === 'number') {\n        hierarchy.maxStackCnt = dayMaxEventRows;\n        hierarchy.hiddenConsumes = true;\n    }\n    // create segInputs only for segs with known heights\n    let segInputs = [];\n    let unknownHeightSegs = [];\n    for (let i = 0; i < segs.length; i += 1) {\n        let seg = segs[i];\n        let { instanceId } = seg.eventRange.instance;\n        let eventHeight = eventInstanceHeights[instanceId];\n        if (eventHeight != null) {\n            segInputs.push({\n                index: i,\n                thickness: eventHeight,\n                span: {\n                    start: seg.firstCol,\n                    end: seg.lastCol + 1,\n                },\n            });\n        }\n        else {\n            unknownHeightSegs.push(seg);\n        }\n    }\n    let hiddenEntries = hierarchy.addSegs(segInputs);\n    let segRects = hierarchy.toRects();\n    let { singleColPlacements, multiColPlacements, leftoverMargins } = placeRects(segRects, segs, cells);\n    let moreCnts = [];\n    let moreMarginTops = [];\n    // add segs with unknown heights\n    for (let seg of unknownHeightSegs) {\n        multiColPlacements[seg.firstCol].push({\n            seg,\n            isVisible: false,\n            isAbsolute: true,\n            absoluteTop: 0,\n            marginTop: 0,\n        });\n        for (let col = seg.firstCol; col <= seg.lastCol; col += 1) {\n            singleColPlacements[col].push({\n                seg: resliceSeg(seg, col, col + 1, cells),\n                isVisible: false,\n                isAbsolute: false,\n                absoluteTop: 0,\n                marginTop: 0,\n            });\n        }\n    }\n    // add the hidden entries\n    for (let col = 0; col < cells.length; col += 1) {\n        moreCnts.push(0);\n    }\n    for (let hiddenEntry of hiddenEntries) {\n        let seg = segs[hiddenEntry.index];\n        let hiddenSpan = hiddenEntry.span;\n        multiColPlacements[hiddenSpan.start].push({\n            seg: resliceSeg(seg, hiddenSpan.start, hiddenSpan.end, cells),\n            isVisible: false,\n            isAbsolute: true,\n            absoluteTop: 0,\n            marginTop: 0,\n        });\n        for (let col = hiddenSpan.start; col < hiddenSpan.end; col += 1) {\n            moreCnts[col] += 1;\n            singleColPlacements[col].push({\n                seg: resliceSeg(seg, col, col + 1, cells),\n                isVisible: false,\n                isAbsolute: false,\n                absoluteTop: 0,\n                marginTop: 0,\n            });\n        }\n    }\n    // deal with leftover margins\n    for (let col = 0; col < cells.length; col += 1) {\n        moreMarginTops.push(leftoverMargins[col]);\n    }\n    return { singleColPlacements, multiColPlacements, moreCnts, moreMarginTops };\n}\n// rects ordered by top coord, then left\nfunction placeRects(allRects, segs, cells) {\n    let rectsByEachCol = groupRectsByEachCol(allRects, cells.length);\n    let singleColPlacements = [];\n    let multiColPlacements = [];\n    let leftoverMargins = [];\n    for (let col = 0; col < cells.length; col += 1) {\n        let rects = rectsByEachCol[col];\n        // compute all static segs in singlePlacements\n        let singlePlacements = [];\n        let currentHeight = 0;\n        let currentMarginTop = 0;\n        for (let rect of rects) {\n            let seg = segs[rect.index];\n            singlePlacements.push({\n                seg: resliceSeg(seg, col, col + 1, cells),\n                isVisible: true,\n                isAbsolute: false,\n                absoluteTop: rect.levelCoord,\n                marginTop: rect.levelCoord - currentHeight,\n            });\n            currentHeight = rect.levelCoord + rect.thickness;\n        }\n        // compute mixed static/absolute segs in multiPlacements\n        let multiPlacements = [];\n        currentHeight = 0;\n        currentMarginTop = 0;\n        for (let rect of rects) {\n            let seg = segs[rect.index];\n            let isAbsolute = rect.span.end - rect.span.start > 1; // multi-column?\n            let isFirstCol = rect.span.start === col;\n            currentMarginTop += rect.levelCoord - currentHeight; // amount of space since bottom of previous seg\n            currentHeight = rect.levelCoord + rect.thickness; // height will now be bottom of current seg\n            if (isAbsolute) {\n                currentMarginTop += rect.thickness;\n                if (isFirstCol) {\n                    multiPlacements.push({\n                        seg: resliceSeg(seg, rect.span.start, rect.span.end, cells),\n                        isVisible: true,\n                        isAbsolute: true,\n                        absoluteTop: rect.levelCoord,\n                        marginTop: 0,\n                    });\n                }\n            }\n            else if (isFirstCol) {\n                multiPlacements.push({\n                    seg: resliceSeg(seg, rect.span.start, rect.span.end, cells),\n                    isVisible: true,\n                    isAbsolute: false,\n                    absoluteTop: rect.levelCoord,\n                    marginTop: currentMarginTop, // claim the margin\n                });\n                currentMarginTop = 0;\n            }\n        }\n        singleColPlacements.push(singlePlacements);\n        multiColPlacements.push(multiPlacements);\n        leftoverMargins.push(currentMarginTop);\n    }\n    return { singleColPlacements, multiColPlacements, leftoverMargins };\n}\nfunction groupRectsByEachCol(rects, colCnt) {\n    let rectsByEachCol = [];\n    for (let col = 0; col < colCnt; col += 1) {\n        rectsByEachCol.push([]);\n    }\n    for (let rect of rects) {\n        for (let col = rect.span.start; col < rect.span.end; col += 1) {\n            rectsByEachCol[col].push(rect);\n        }\n    }\n    return rectsByEachCol;\n}\nfunction resliceSeg(seg, spanStart, spanEnd, cells) {\n    if (seg.firstCol === spanStart && seg.lastCol === spanEnd - 1) {\n        return seg;\n    }\n    let eventRange = seg.eventRange;\n    let origRange = eventRange.range;\n    let slicedRange = intersectRanges(origRange, {\n        start: cells[spanStart].date,\n        end: addDays(cells[spanEnd - 1].date, 1),\n    });\n    return Object.assign(Object.assign({}, seg), { firstCol: spanStart, lastCol: spanEnd - 1, eventRange: {\n            def: eventRange.def,\n            ui: Object.assign(Object.assign({}, eventRange.ui), { durationEditable: false }),\n            instance: eventRange.instance,\n            range: slicedRange,\n        }, isStart: seg.isStart && slicedRange.start.valueOf() === origRange.start.valueOf(), isEnd: seg.isEnd && slicedRange.end.valueOf() === origRange.end.valueOf() });\n}\nclass DayGridSegHierarchy extends SegHierarchy {\n    constructor() {\n        super(...arguments);\n        // config\n        this.hiddenConsumes = false;\n        // allows us to keep hidden entries in the hierarchy so they take up space\n        this.forceHidden = {};\n    }\n    addSegs(segInputs) {\n        const hiddenSegs = super.addSegs(segInputs);\n        const { entriesByLevel } = this;\n        const excludeHidden = (entry) => !this.forceHidden[buildEntryKey(entry)];\n        // remove the forced-hidden segs\n        for (let level = 0; level < entriesByLevel.length; level += 1) {\n            entriesByLevel[level] = entriesByLevel[level].filter(excludeHidden);\n        }\n        return hiddenSegs;\n    }\n    handleInvalidInsertion(insertion, entry, hiddenEntries) {\n        const { entriesByLevel, forceHidden } = this;\n        const { touchingEntry, touchingLevel, touchingLateral } = insertion;\n        if (this.hiddenConsumes && touchingEntry) {\n            const touchingEntryId = buildEntryKey(touchingEntry);\n            // if not already hidden\n            if (!forceHidden[touchingEntryId]) {\n                if (this.allowReslicing) {\n                    const placeholderEntry = Object.assign(Object.assign({}, touchingEntry), { span: intersectSpans(touchingEntry.span, entry.span) });\n                    const placeholderEntryId = buildEntryKey(placeholderEntry);\n                    forceHidden[placeholderEntryId] = true;\n                    entriesByLevel[touchingLevel][touchingLateral] = placeholderEntry; // replace touchingEntry with our placeholder\n                    this.splitEntry(touchingEntry, entry, hiddenEntries); // split up the touchingEntry, reinsert it\n                }\n                else {\n                    forceHidden[touchingEntryId] = true;\n                    hiddenEntries.push(touchingEntry);\n                }\n            }\n        }\n        return super.handleInvalidInsertion(insertion, entry, hiddenEntries);\n    }\n}\n\nclass TableRow extends DateComponent {\n    constructor() {\n        super(...arguments);\n        this.cellElRefs = new RefMap(); // the <td>\n        this.frameElRefs = new RefMap(); // the fc-daygrid-day-frame\n        this.fgElRefs = new RefMap(); // the fc-daygrid-day-events\n        this.segHarnessRefs = new RefMap(); // indexed by \"instanceId:firstCol\"\n        this.rootElRef = createRef();\n        this.state = {\n            framePositions: null,\n            maxContentHeight: null,\n            eventInstanceHeights: {},\n        };\n        this.handleResize = (isForced) => {\n            if (isForced) {\n                this.updateSizing(true); // isExternal=true\n            }\n        };\n    }\n    render() {\n        let { props, state, context } = this;\n        let { options } = context;\n        let colCnt = props.cells.length;\n        let businessHoursByCol = splitSegsByFirstCol(props.businessHourSegs, colCnt);\n        let bgEventSegsByCol = splitSegsByFirstCol(props.bgEventSegs, colCnt);\n        let highlightSegsByCol = splitSegsByFirstCol(this.getHighlightSegs(), colCnt);\n        let mirrorSegsByCol = splitSegsByFirstCol(this.getMirrorSegs(), colCnt);\n        let { singleColPlacements, multiColPlacements, moreCnts, moreMarginTops } = computeFgSegPlacement(sortEventSegs(props.fgEventSegs, options.eventOrder), props.dayMaxEvents, props.dayMaxEventRows, options.eventOrderStrict, state.eventInstanceHeights, state.maxContentHeight, props.cells);\n        let isForcedInvisible = // TODO: messy way to compute this\n         (props.eventDrag && props.eventDrag.affectedInstances) ||\n            (props.eventResize && props.eventResize.affectedInstances) ||\n            {};\n        return (createElement(\"tr\", { ref: this.rootElRef, role: \"row\" },\n            props.renderIntro && props.renderIntro(),\n            props.cells.map((cell, col) => {\n                let normalFgNodes = this.renderFgSegs(col, props.forPrint ? singleColPlacements[col] : multiColPlacements[col], props.todayRange, isForcedInvisible);\n                let mirrorFgNodes = this.renderFgSegs(col, buildMirrorPlacements(mirrorSegsByCol[col], multiColPlacements), props.todayRange, {}, Boolean(props.eventDrag), Boolean(props.eventResize), false);\n                return (createElement(TableCell, { key: cell.key, elRef: this.cellElRefs.createRef(cell.key), innerElRef: this.frameElRefs.createRef(cell.key) /* FF <td> problem, but okay to use for left/right. TODO: rename prop */, dateProfile: props.dateProfile, date: cell.date, showDayNumber: props.showDayNumbers, showWeekNumber: props.showWeekNumbers && col === 0, forceDayTop: props.showWeekNumbers /* even displaying weeknum for row, not necessarily day */, todayRange: props.todayRange, eventSelection: props.eventSelection, eventDrag: props.eventDrag, eventResize: props.eventResize, extraRenderProps: cell.extraRenderProps, extraDataAttrs: cell.extraDataAttrs, extraClassNames: cell.extraClassNames, extraDateSpan: cell.extraDateSpan, moreCnt: moreCnts[col], moreMarginTop: moreMarginTops[col], singlePlacements: singleColPlacements[col], fgContentElRef: this.fgElRefs.createRef(cell.key), fgContent: ( // Fragment scopes the keys\n                    createElement(Fragment, null,\n                        createElement(Fragment, null, normalFgNodes),\n                        createElement(Fragment, null, mirrorFgNodes))), bgContent: ( // Fragment scopes the keys\n                    createElement(Fragment, null,\n                        this.renderFillSegs(highlightSegsByCol[col], 'highlight'),\n                        this.renderFillSegs(businessHoursByCol[col], 'non-business'),\n                        this.renderFillSegs(bgEventSegsByCol[col], 'bg-event'))), minHeight: props.cellMinHeight }));\n            })));\n    }\n    componentDidMount() {\n        this.updateSizing(true);\n        this.context.addResizeHandler(this.handleResize);\n    }\n    componentDidUpdate(prevProps, prevState) {\n        let currentProps = this.props;\n        this.updateSizing(!isPropsEqual(prevProps, currentProps));\n    }\n    componentWillUnmount() {\n        this.context.removeResizeHandler(this.handleResize);\n    }\n    getHighlightSegs() {\n        let { props } = this;\n        if (props.eventDrag && props.eventDrag.segs.length) { // messy check\n            return props.eventDrag.segs;\n        }\n        if (props.eventResize && props.eventResize.segs.length) { // messy check\n            return props.eventResize.segs;\n        }\n        return props.dateSelectionSegs;\n    }\n    getMirrorSegs() {\n        let { props } = this;\n        if (props.eventResize && props.eventResize.segs.length) { // messy check\n            return props.eventResize.segs;\n        }\n        return [];\n    }\n    renderFgSegs(col, segPlacements, todayRange, isForcedInvisible, isDragging, isResizing, isDateSelecting) {\n        let { context } = this;\n        let { eventSelection } = this.props;\n        let { framePositions } = this.state;\n        let defaultDisplayEventEnd = this.props.cells.length === 1; // colCnt === 1\n        let isMirror = isDragging || isResizing || isDateSelecting;\n        let nodes = [];\n        if (framePositions) {\n            for (let placement of segPlacements) {\n                let { seg } = placement;\n                let { instanceId } = seg.eventRange.instance;\n                let key = instanceId + ':' + col;\n                let isVisible = placement.isVisible && !isForcedInvisible[instanceId];\n                let isAbsolute = placement.isAbsolute;\n                let left = '';\n                let right = '';\n                if (isAbsolute) {\n                    if (context.isRtl) {\n                        right = 0;\n                        left = framePositions.lefts[seg.lastCol] - framePositions.lefts[seg.firstCol];\n                    }\n                    else {\n                        left = 0;\n                        right = framePositions.rights[seg.firstCol] - framePositions.rights[seg.lastCol];\n                    }\n                }\n                /*\n                known bug: events that are force to be list-item but span multiple days still take up space in later columns\n                todo: in print view, for multi-day events, don't display title within non-start/end segs\n                */\n                nodes.push(createElement(\"div\", { className: 'fc-daygrid-event-harness' + (isAbsolute ? ' fc-daygrid-event-harness-abs' : ''), key: key, ref: isMirror ? null : this.segHarnessRefs.createRef(key), style: {\n                        visibility: isVisible ? '' : 'hidden',\n                        marginTop: isAbsolute ? '' : placement.marginTop,\n                        top: isAbsolute ? placement.absoluteTop : '',\n                        left,\n                        right,\n                    } }, hasListItemDisplay(seg) ? (createElement(TableListItemEvent, Object.assign({ seg: seg, isDragging: isDragging, isSelected: instanceId === eventSelection, defaultDisplayEventEnd: defaultDisplayEventEnd }, getSegMeta(seg, todayRange)))) : (createElement(TableBlockEvent, Object.assign({ seg: seg, isDragging: isDragging, isResizing: isResizing, isDateSelecting: isDateSelecting, isSelected: instanceId === eventSelection, defaultDisplayEventEnd: defaultDisplayEventEnd }, getSegMeta(seg, todayRange))))));\n            }\n        }\n        return nodes;\n    }\n    renderFillSegs(segs, fillType) {\n        let { isRtl } = this.context;\n        let { todayRange } = this.props;\n        let { framePositions } = this.state;\n        let nodes = [];\n        if (framePositions) {\n            for (let seg of segs) {\n                let leftRightCss = isRtl ? {\n                    right: 0,\n                    left: framePositions.lefts[seg.lastCol] - framePositions.lefts[seg.firstCol],\n                } : {\n                    left: 0,\n                    right: framePositions.rights[seg.firstCol] - framePositions.rights[seg.lastCol],\n                };\n                nodes.push(createElement(\"div\", { key: buildEventRangeKey(seg.eventRange), className: \"fc-daygrid-bg-harness\", style: leftRightCss }, fillType === 'bg-event' ?\n                    createElement(BgEvent, Object.assign({ seg: seg }, getSegMeta(seg, todayRange))) :\n                    renderFill(fillType)));\n            }\n        }\n        return createElement(Fragment, {}, ...nodes);\n    }\n    updateSizing(isExternalSizingChange) {\n        let { props, state, frameElRefs } = this;\n        if (!props.forPrint &&\n            props.clientWidth !== null // positioning ready?\n        ) {\n            if (isExternalSizingChange) {\n                let frameEls = props.cells.map((cell) => frameElRefs.currentMap[cell.key]);\n                if (frameEls.length) {\n                    let originEl = this.rootElRef.current;\n                    let newPositionCache = new PositionCache(originEl, frameEls, true, // isHorizontal\n                    false);\n                    if (!state.framePositions || !state.framePositions.similarTo(newPositionCache)) {\n                        this.setState({\n                            framePositions: new PositionCache(originEl, frameEls, true, // isHorizontal\n                            false),\n                        });\n                    }\n                }\n            }\n            const oldInstanceHeights = this.state.eventInstanceHeights;\n            const newInstanceHeights = this.queryEventInstanceHeights();\n            const limitByContentHeight = props.dayMaxEvents === true || props.dayMaxEventRows === true;\n            this.safeSetState({\n                // HACK to prevent oscillations of events being shown/hidden from max-event-rows\n                // Essentially, once you compute an element's height, never null-out.\n                // TODO: always display all events, as visibility:hidden?\n                eventInstanceHeights: Object.assign(Object.assign({}, oldInstanceHeights), newInstanceHeights),\n                maxContentHeight: limitByContentHeight ? this.computeMaxContentHeight() : null,\n            });\n        }\n    }\n    queryEventInstanceHeights() {\n        let segElMap = this.segHarnessRefs.currentMap;\n        let eventInstanceHeights = {};\n        // get the max height amongst instance segs\n        for (let key in segElMap) {\n            let height = Math.round(segElMap[key].getBoundingClientRect().height);\n            let instanceId = key.split(':')[0]; // deconstruct how renderFgSegs makes the key\n            eventInstanceHeights[instanceId] = Math.max(eventInstanceHeights[instanceId] || 0, height);\n        }\n        return eventInstanceHeights;\n    }\n    computeMaxContentHeight() {\n        let firstKey = this.props.cells[0].key;\n        let cellEl = this.cellElRefs.currentMap[firstKey];\n        let fcContainerEl = this.fgElRefs.currentMap[firstKey];\n        return cellEl.getBoundingClientRect().bottom - fcContainerEl.getBoundingClientRect().top;\n    }\n    getCellEls() {\n        let elMap = this.cellElRefs.currentMap;\n        return this.props.cells.map((cell) => elMap[cell.key]);\n    }\n}\nTableRow.addStateEquality({\n    eventInstanceHeights: isPropsEqual,\n});\nfunction buildMirrorPlacements(mirrorSegs, colPlacements) {\n    if (!mirrorSegs.length) {\n        return [];\n    }\n    let topsByInstanceId = buildAbsoluteTopHash(colPlacements); // TODO: cache this at first render?\n    return mirrorSegs.map((seg) => ({\n        seg,\n        isVisible: true,\n        isAbsolute: true,\n        absoluteTop: topsByInstanceId[seg.eventRange.instance.instanceId],\n        marginTop: 0,\n    }));\n}\nfunction buildAbsoluteTopHash(colPlacements) {\n    let topsByInstanceId = {};\n    for (let placements of colPlacements) {\n        for (let placement of placements) {\n            topsByInstanceId[placement.seg.eventRange.instance.instanceId] = placement.absoluteTop;\n        }\n    }\n    return topsByInstanceId;\n}\n\nclass TableRows extends DateComponent {\n    constructor() {\n        super(...arguments);\n        this.splitBusinessHourSegs = memoize(splitSegsByRow);\n        this.splitBgEventSegs = memoize(splitSegsByRow);\n        this.splitFgEventSegs = memoize(splitSegsByRow);\n        this.splitDateSelectionSegs = memoize(splitSegsByRow);\n        this.splitEventDrag = memoize(splitInteractionByRow);\n        this.splitEventResize = memoize(splitInteractionByRow);\n        this.rowRefs = new RefMap();\n    }\n    render() {\n        let { props, context } = this;\n        let rowCnt = props.cells.length;\n        let businessHourSegsByRow = this.splitBusinessHourSegs(props.businessHourSegs, rowCnt);\n        let bgEventSegsByRow = this.splitBgEventSegs(props.bgEventSegs, rowCnt);\n        let fgEventSegsByRow = this.splitFgEventSegs(props.fgEventSegs, rowCnt);\n        let dateSelectionSegsByRow = this.splitDateSelectionSegs(props.dateSelectionSegs, rowCnt);\n        let eventDragByRow = this.splitEventDrag(props.eventDrag, rowCnt);\n        let eventResizeByRow = this.splitEventResize(props.eventResize, rowCnt);\n        // for DayGrid view with many rows, force a min-height on cells so doesn't appear squished\n        // choose 7 because a month view will have max 6 rows\n        let cellMinHeight = (rowCnt >= 7 && props.clientWidth) ?\n            props.clientWidth / context.options.aspectRatio / 6 :\n            null;\n        return (createElement(NowTimer, { unit: \"day\" }, (nowDate, todayRange) => (createElement(Fragment, null, props.cells.map((cells, row) => (createElement(TableRow, { ref: this.rowRefs.createRef(row), key: cells.length\n                ? cells[0].date.toISOString() /* best? or put key on cell? or use diff formatter? */\n                : row // in case there are no cells (like when resource view is loading)\n            , showDayNumbers: rowCnt > 1, showWeekNumbers: props.showWeekNumbers, todayRange: todayRange, dateProfile: props.dateProfile, cells: cells, renderIntro: props.renderRowIntro, businessHourSegs: businessHourSegsByRow[row], eventSelection: props.eventSelection, bgEventSegs: bgEventSegsByRow[row].filter(isSegAllDay) /* hack */, fgEventSegs: fgEventSegsByRow[row], dateSelectionSegs: dateSelectionSegsByRow[row], eventDrag: eventDragByRow[row], eventResize: eventResizeByRow[row], dayMaxEvents: props.dayMaxEvents, dayMaxEventRows: props.dayMaxEventRows, clientWidth: props.clientWidth, clientHeight: props.clientHeight, cellMinHeight: cellMinHeight, forPrint: props.forPrint })))))));\n    }\n    componentDidMount() {\n        // HACK: need a daygrid wrapper parent to do positioning\n        // NOTE: a daygrid resource view w/o resources can have zero cells\n        const firstCellEl = this.rowRefs.currentMap[0].getCellEls()[0];\n        this.rootEl = firstCellEl ? firstCellEl.closest('.fc-daygrid-body') : null;\n        if (this.rootEl) {\n            this.context.registerInteractiveComponent(this, {\n                el: this.rootEl,\n                isHitComboAllowed: this.props.isHitComboAllowed,\n            });\n        }\n    }\n    componentWillUnmount() {\n        if (this.rootEl) {\n            this.context.unregisterInteractiveComponent(this);\n            this.rootEl = null;\n        }\n    }\n    // Hit System\n    // ----------------------------------------------------------------------------------------------------\n    prepareHits() {\n        this.rowPositions = new PositionCache(this.rootEl, this.rowRefs.collect().map((rowObj) => rowObj.getCellEls()[0]), // first cell el in each row. TODO: not optimal\n        false, true);\n        this.colPositions = new PositionCache(this.rootEl, this.rowRefs.currentMap[0].getCellEls(), // cell els in first row\n        true, // horizontal\n        false);\n    }\n    queryHit(positionLeft, positionTop) {\n        let { colPositions, rowPositions } = this;\n        let col = colPositions.leftToIndex(positionLeft);\n        let row = rowPositions.topToIndex(positionTop);\n        if (row != null && col != null) {\n            let cell = this.props.cells[row][col];\n            return {\n                dateProfile: this.props.dateProfile,\n                dateSpan: Object.assign({ range: this.getCellRange(row, col), allDay: true }, cell.extraDateSpan),\n                dayEl: this.getCellEl(row, col),\n                rect: {\n                    left: colPositions.lefts[col],\n                    right: colPositions.rights[col],\n                    top: rowPositions.tops[row],\n                    bottom: rowPositions.bottoms[row],\n                },\n                layer: 0,\n            };\n        }\n        return null;\n    }\n    getCellEl(row, col) {\n        return this.rowRefs.currentMap[row].getCellEls()[col]; // TODO: not optimal\n    }\n    getCellRange(row, col) {\n        let start = this.props.cells[row][col].date;\n        let end = addDays(start, 1);\n        return { start, end };\n    }\n}\nfunction isSegAllDay(seg) {\n    return seg.eventRange.def.allDay;\n}\n\nclass Table extends DateComponent {\n    constructor() {\n        super(...arguments);\n        this.elRef = createRef();\n        this.needsScrollReset = false;\n    }\n    render() {\n        let { props } = this;\n        let { dayMaxEventRows, dayMaxEvents, expandRows } = props;\n        let limitViaBalanced = dayMaxEvents === true || dayMaxEventRows === true;\n        // if rows can't expand to fill fixed height, can't do balanced-height event limit\n        // TODO: best place to normalize these options?\n        if (limitViaBalanced && !expandRows) {\n            limitViaBalanced = false;\n            dayMaxEventRows = null;\n            dayMaxEvents = null;\n        }\n        let classNames = [\n            'fc-daygrid-body',\n            limitViaBalanced ? 'fc-daygrid-body-balanced' : 'fc-daygrid-body-unbalanced',\n            expandRows ? '' : 'fc-daygrid-body-natural', // will height of one row depend on the others?\n        ];\n        return (createElement(\"div\", { ref: this.elRef, className: classNames.join(' '), style: {\n                // these props are important to give this wrapper correct dimensions for interactions\n                // TODO: if we set it here, can we avoid giving to inner tables?\n                width: props.clientWidth,\n                minWidth: props.tableMinWidth,\n            } },\n            createElement(\"table\", { role: \"presentation\", className: \"fc-scrollgrid-sync-table\", style: {\n                    width: props.clientWidth,\n                    minWidth: props.tableMinWidth,\n                    height: expandRows ? props.clientHeight : '',\n                } },\n                props.colGroupNode,\n                createElement(\"tbody\", { role: \"presentation\" },\n                    createElement(TableRows, { dateProfile: props.dateProfile, cells: props.cells, renderRowIntro: props.renderRowIntro, showWeekNumbers: props.showWeekNumbers, clientWidth: props.clientWidth, clientHeight: props.clientHeight, businessHourSegs: props.businessHourSegs, bgEventSegs: props.bgEventSegs, fgEventSegs: props.fgEventSegs, dateSelectionSegs: props.dateSelectionSegs, eventSelection: props.eventSelection, eventDrag: props.eventDrag, eventResize: props.eventResize, dayMaxEvents: dayMaxEvents, dayMaxEventRows: dayMaxEventRows, forPrint: props.forPrint, isHitComboAllowed: props.isHitComboAllowed })))));\n    }\n    componentDidMount() {\n        this.requestScrollReset();\n    }\n    componentDidUpdate(prevProps) {\n        if (prevProps.dateProfile !== this.props.dateProfile) {\n            this.requestScrollReset();\n        }\n        else {\n            this.flushScrollReset();\n        }\n    }\n    requestScrollReset() {\n        this.needsScrollReset = true;\n        this.flushScrollReset();\n    }\n    flushScrollReset() {\n        if (this.needsScrollReset &&\n            this.props.clientWidth // sizes computed?\n        ) {\n            const subjectEl = getScrollSubjectEl(this.elRef.current, this.props.dateProfile);\n            if (subjectEl) {\n                const originEl = subjectEl.closest('.fc-daygrid-body');\n                const scrollEl = originEl.closest('.fc-scroller');\n                const scrollTop = subjectEl.getBoundingClientRect().top -\n                    originEl.getBoundingClientRect().top;\n                scrollEl.scrollTop = scrollTop ? (scrollTop + 1) : 0; // overcome border\n            }\n            this.needsScrollReset = false;\n        }\n    }\n}\nfunction getScrollSubjectEl(containerEl, dateProfile) {\n    let el;\n    if (dateProfile.currentRangeUnit.match(/year|month/)) {\n        el = containerEl.querySelector(`[data-date=\"${formatIsoMonthStr(dateProfile.currentDate)}-01\"]`);\n        // even if view is month-based, first-of-month might be hidden...\n    }\n    if (!el) {\n        el = containerEl.querySelector(`[data-date=\"${formatDayString(dateProfile.currentDate)}\"]`);\n        // could still be hidden if an interior-view hidden day\n    }\n    return el;\n}\n\nclass DayTableSlicer extends Slicer {\n    constructor() {\n        super(...arguments);\n        this.forceDayIfListItem = true;\n    }\n    sliceRange(dateRange, dayTableModel) {\n        return dayTableModel.sliceRange(dateRange);\n    }\n}\n\nclass DayTable extends DateComponent {\n    constructor() {\n        super(...arguments);\n        this.slicer = new DayTableSlicer();\n        this.tableRef = createRef();\n    }\n    render() {\n        let { props, context } = this;\n        return (createElement(Table, Object.assign({ ref: this.tableRef }, this.slicer.sliceProps(props, props.dateProfile, props.nextDayThreshold, context, props.dayTableModel), { dateProfile: props.dateProfile, cells: props.dayTableModel.cells, colGroupNode: props.colGroupNode, tableMinWidth: props.tableMinWidth, renderRowIntro: props.renderRowIntro, dayMaxEvents: props.dayMaxEvents, dayMaxEventRows: props.dayMaxEventRows, showWeekNumbers: props.showWeekNumbers, expandRows: props.expandRows, headerAlignElRef: props.headerAlignElRef, clientWidth: props.clientWidth, clientHeight: props.clientHeight, forPrint: props.forPrint })));\n    }\n}\n\nclass TableDateProfileGenerator extends DateProfileGenerator {\n    // Computes the date range that will be rendered\n    buildRenderRange(currentRange, currentRangeUnit, isRangeAllDay) {\n        let renderRange = super.buildRenderRange(currentRange, currentRangeUnit, isRangeAllDay);\n        let { props } = this;\n        return buildDayTableRenderRange({\n            currentRange: renderRange,\n            snapToWeek: /^(year|month)$/.test(currentRangeUnit),\n            fixedWeekCount: props.fixedWeekCount,\n            dateEnv: props.dateEnv,\n        });\n    }\n}\nfunction buildDayTableRenderRange(props) {\n    let { dateEnv, currentRange } = props;\n    let { start, end } = currentRange;\n    let endOfWeek;\n    // year and month views should be aligned with weeks. this is already done for week\n    if (props.snapToWeek) {\n        start = dateEnv.startOfWeek(start);\n        // make end-of-week if not already\n        endOfWeek = dateEnv.startOfWeek(end);\n        if (endOfWeek.valueOf() !== end.valueOf()) {\n            end = addWeeks(endOfWeek, 1);\n        }\n    }\n    // ensure 6 weeks\n    if (props.fixedWeekCount) {\n        // TODO: instead of these date-math gymnastics (for multimonth view),\n        // compute dateprofiles of all months, then use start of first and end of last.\n        let lastMonthRenderStart = dateEnv.startOfWeek(dateEnv.startOfMonth(addDays(currentRange.end, -1)));\n        let rowCnt = Math.ceil(// could be partial weeks due to hiddenDays\n        diffWeeks(lastMonthRenderStart, end));\n        end = addWeeks(end, 6 - rowCnt);\n    }\n    return { start, end };\n}\n\n/* An abstract class for the daygrid views, as well as month view. Renders one or more rows of day cells.\n----------------------------------------------------------------------------------------------------------------------*/\n// It is a manager for a Table subcomponent, which does most of the heavy lifting.\n// It is responsible for managing width/height.\nclass TableView extends DateComponent {\n    constructor() {\n        super(...arguments);\n        this.headerElRef = createRef();\n    }\n    renderSimpleLayout(headerRowContent, bodyContent) {\n        let { props, context } = this;\n        let sections = [];\n        let stickyHeaderDates = getStickyHeaderDates(context.options);\n        if (headerRowContent) {\n            sections.push({\n                type: 'header',\n                key: 'header',\n                isSticky: stickyHeaderDates,\n                chunk: {\n                    elRef: this.headerElRef,\n                    tableClassName: 'fc-col-header',\n                    rowContent: headerRowContent,\n                },\n            });\n        }\n        sections.push({\n            type: 'body',\n            key: 'body',\n            liquid: true,\n            chunk: { content: bodyContent },\n        });\n        return (createElement(ViewContainer, { elClasses: ['fc-daygrid'], viewSpec: context.viewSpec },\n            createElement(SimpleScrollGrid, { liquid: !props.isHeightAuto && !props.forPrint, collapsibleWidth: props.forPrint, cols: [] /* TODO: make optional? */, sections: sections })));\n    }\n    renderHScrollLayout(headerRowContent, bodyContent, colCnt, dayMinWidth) {\n        let ScrollGrid = this.context.pluginHooks.scrollGridImpl;\n        if (!ScrollGrid) {\n            throw new Error('No ScrollGrid implementation');\n        }\n        let { props, context } = this;\n        let stickyHeaderDates = !props.forPrint && getStickyHeaderDates(context.options);\n        let stickyFooterScrollbar = !props.forPrint && getStickyFooterScrollbar(context.options);\n        let sections = [];\n        if (headerRowContent) {\n            sections.push({\n                type: 'header',\n                key: 'header',\n                isSticky: stickyHeaderDates,\n                chunks: [{\n                        key: 'main',\n                        elRef: this.headerElRef,\n                        tableClassName: 'fc-col-header',\n                        rowContent: headerRowContent,\n                    }],\n            });\n        }\n        sections.push({\n            type: 'body',\n            key: 'body',\n            liquid: true,\n            chunks: [{\n                    key: 'main',\n                    content: bodyContent,\n                }],\n        });\n        if (stickyFooterScrollbar) {\n            sections.push({\n                type: 'footer',\n                key: 'footer',\n                isSticky: true,\n                chunks: [{\n                        key: 'main',\n                        content: renderScrollShim,\n                    }],\n            });\n        }\n        return (createElement(ViewContainer, { elClasses: ['fc-daygrid'], viewSpec: context.viewSpec },\n            createElement(ScrollGrid, { liquid: !props.isHeightAuto && !props.forPrint, forPrint: props.forPrint, collapsibleWidth: props.forPrint, colGroups: [{ cols: [{ span: colCnt, minWidth: dayMinWidth }] }], sections: sections })));\n    }\n}\n\nclass DayTableView extends TableView {\n    constructor() {\n        super(...arguments);\n        this.buildDayTableModel = memoize(buildDayTableModel);\n        this.headerRef = createRef();\n        this.tableRef = createRef();\n        // can't override any lifecycle methods from parent\n    }\n    render() {\n        let { options, dateProfileGenerator } = this.context;\n        let { props } = this;\n        let dayTableModel = this.buildDayTableModel(props.dateProfile, dateProfileGenerator);\n        let headerContent = options.dayHeaders && (createElement(DayHeader, { ref: this.headerRef, dateProfile: props.dateProfile, dates: dayTableModel.headerDates, datesRepDistinctDays: dayTableModel.rowCnt === 1 }));\n        let bodyContent = (contentArg) => (createElement(DayTable, { ref: this.tableRef, dateProfile: props.dateProfile, dayTableModel: dayTableModel, businessHours: props.businessHours, dateSelection: props.dateSelection, eventStore: props.eventStore, eventUiBases: props.eventUiBases, eventSelection: props.eventSelection, eventDrag: props.eventDrag, eventResize: props.eventResize, nextDayThreshold: options.nextDayThreshold, colGroupNode: contentArg.tableColGroupNode, tableMinWidth: contentArg.tableMinWidth, dayMaxEvents: options.dayMaxEvents, dayMaxEventRows: options.dayMaxEventRows, showWeekNumbers: options.weekNumbers, expandRows: !props.isHeightAuto, headerAlignElRef: this.headerElRef, clientWidth: contentArg.clientWidth, clientHeight: contentArg.clientHeight, forPrint: props.forPrint }));\n        return options.dayMinWidth\n            ? this.renderHScrollLayout(headerContent, bodyContent, dayTableModel.colCnt, options.dayMinWidth)\n            : this.renderSimpleLayout(headerContent, bodyContent);\n    }\n}\nfunction buildDayTableModel(dateProfile, dateProfileGenerator) {\n    let daySeries = new DaySeriesModel(dateProfile.renderRange, dateProfileGenerator);\n    return new DayTableModel(daySeries, /year|month|week/.test(dateProfile.currentRangeUnit));\n}\n\nexport { DayTableView as DayGridView, DayTable, DayTableSlicer, Table, TableDateProfileGenerator, TableRows, TableView, buildDayTableModel, buildDayTableRenderRange };\n"],"names":["$jgkCe","parcelRequire","$ff6c31a575eac43e$export$2e2bcd8739ae039","createPlugin","name","initialView","views","dayGrid","component","$0jCox","DayGridView","dateProfileGeneratorClass","TableDateProfileGenerator","dayGridDay","type","duration","days","dayGridWeek","weeks","dayGridMonth","months","fixedWeekCount","dayGridYear","years","$9tuWU","$000f37fb542d3ff1$var$splitSegsByRow","segs","rowCnt","byRow","i","seg","row","push","$000f37fb542d3ff1$var$splitSegsByFirstCol","colCnt","byCol","firstCol","$000f37fb542d3ff1$var$splitInteractionByRow","ui","affectedInstances","isEvent","cw","$000f37fb542d3ff1$var$DEFAULT_TABLE_EVENT_TIME_FORMAT","w","hour","minute","omitZeroMinute","meridiem","$000f37fb542d3ff1$var$hasListItemDisplay","display","eventRange","def","allDay","lastCol","isStart","isEnd","$000f37fb542d3ff1$var$TableBlockEvent","X","render","props","this","$1Hdcz","createElement","cj","Object","assign","elClasses","defaultTimeFormat","defaultDisplayEventEnd","disableResizing","$000f37fb542d3ff1$var$TableListItemEvent","context","options","timeFormat","eventTimeFormat","timeText","bQ","cn","elTag","elAttrs","bU","defaultGenerator","$000f37fb542d3ff1$var$renderInnerContent","isResizing","isDateSelecting","renderProps","Fragment","className","style","borderColor","backgroundColor","event","title","$000f37fb542d3ff1$var$TableCellMoreLink","constructor","super","arguments","compileSegs","y","$000f37fb542d3ff1$var$compileSegs","allSegs","invisibleSegs","singlePlacements","cr","dateProfile","todayRange","allDayDate","moreCnt","hiddenSegs","alignmentElRef","alignGridTop","extraDateSpan","popoverContent","isForcedInvisible","eventDrag","eventResize","map","instanceId","instance","key","visibility","isDragging","isSelected","eventSelection","bS","placement","isVisible","$000f37fb542d3ff1$var$DEFAULT_WEEK_NUM_FORMAT","week","$000f37fb542d3ff1$var$TableCell","be","rootElRef","createRef","state","dayNumberId","a5","handleRootEl","el","Y","elRef","dateEnv","date","isMonthStart","showDayNumber","currentRange","start","currentStart","end","currentEnd","currentEndIncl","bg","currentFirstYear","getYear","currentFirstMonth","getMonth","currentLastYear","currentLastMonth","Boolean","valueOf","getDay","$000f37fb542d3ff1$var$shouldDisplayMonthStart","cl","extraClassNames","extraDataAttrs","role","$000f37fb542d3ff1$var$renderTopInner","extraRenderProps","InnerContent","ref","innerElRef","minHeight","showWeekNumber","cq","b0","defaultFormat","isDisabled","cm","forceDayTop","id","undefined","fgContentElRef","fgContent","marginTop","moreMarginTop","bgContent","dayNumberText","$000f37fb542d3ff1$var$computeFgSegPlacement","dayMaxEvents","dayMaxEventRows","strictOrder","eventInstanceHeights","maxContentHeight","cells","hierarchy","$000f37fb542d3ff1$var$DayGridSegHierarchy","allowReslicing","maxCoord","hiddenConsumes","maxStackCnt","segInputs","unknownHeightSegs","length","eventHeight","index","thickness","span","hiddenEntries","addSegs","segRects","toRects","singleColPlacements","multiColPlacements","leftoverMargins","allRects","rectsByEachCol","rects","col","rect","$000f37fb542d3ff1$var$groupRectsByEachCol","currentHeight","currentMarginTop","$000f37fb542d3ff1$var$resliceSeg","isAbsolute","absoluteTop","levelCoord","multiPlacements","isFirstCol","$000f37fb542d3ff1$var$placeRects","moreCnts","moreMarginTops","hiddenEntry","hiddenSpan","spanStart","spanEnd","origRange","range","slicedRange","n","q","durationEditable","bA","forceHidden","entriesByLevel","excludeHidden","entry","bB","level","filter","handleInvalidInsertion","insertion","touchingEntry","touchingLevel","touchingLateral","touchingEntryId","placeholderEntry","bF","splitEntry","$000f37fb542d3ff1$var$TableRow","cellElRefs","cf","frameElRefs","fgElRefs","segHarnessRefs","framePositions","handleResize","isForced","updateSizing","businessHoursByCol","businessHourSegs","bgEventSegsByCol","bgEventSegs","highlightSegsByCol","getHighlightSegs","mirrorSegsByCol","getMirrorSegs","bR","fgEventSegs","eventOrder","eventOrderStrict","renderIntro","cell","normalFgNodes","renderFgSegs","forPrint","mirrorFgNodes","mirrorSegs","colPlacements","topsByInstanceId","placements","$000f37fb542d3ff1$var$buildAbsoluteTopHash","$000f37fb542d3ff1$var$buildMirrorPlacements","showDayNumbers","showWeekNumbers","renderFillSegs","cellMinHeight","componentDidMount","addResizeHandler","componentDidUpdate","prevProps","prevState","currentProps","A","componentWillUnmount","removeResizeHandler","dateSelectionSegs","segPlacements","isMirror","nodes","left","right","isRtl","lefts","rights","top","fillType","leftRightCss","bT","cp","co","isExternalSizingChange","clientWidth","frameEls","currentMap","originEl","current","newPositionCache","ba","similarTo","setState","oldInstanceHeights","newInstanceHeights","queryEventInstanceHeights","limitByContentHeight","safeSetState","computeMaxContentHeight","segElMap","height","Math","round","getBoundingClientRect","split","max","firstKey","cellEl","fcContainerEl","bottom","getCellEls","elMap","addStateEquality","$000f37fb542d3ff1$export$d955b1c53830e05a","splitBusinessHourSegs","splitBgEventSegs","splitFgEventSegs","splitDateSelectionSegs","splitEventDrag","splitEventResize","rowRefs","businessHourSegsByRow","bgEventSegsByRow","fgEventSegsByRow","dateSelectionSegsByRow","eventDragByRow","eventResizeByRow","aspectRatio","ch","unit","nowDate","toISOString","renderRowIntro","$000f37fb542d3ff1$var$isSegAllDay","clientHeight","firstCellEl","rootEl","closest","registerInteractiveComponent","isHitComboAllowed","unregisterInteractiveComponent","prepareHits","rowPositions","collect","rowObj","colPositions","queryHit","positionLeft","positionTop","leftToIndex","topToIndex","dateSpan","getCellRange","dayEl","getCellEl","tops","bottoms","layer","$000f37fb542d3ff1$export$54ec01a60f47d33d","needsScrollReset","expandRows","limitViaBalanced","classNames","join","width","minWidth","tableMinWidth","colGroupNode","requestScrollReset","flushScrollReset","subjectEl","containerEl","currentRangeUnit","match","querySelector","bx","currentDate","bv","$000f37fb542d3ff1$var$getScrollSubjectEl","scrollEl","scrollTop","$000f37fb542d3ff1$export$eb38be9553e58392","bW","forceDayIfListItem","sliceRange","dateRange","dayTableModel","$000f37fb542d3ff1$export$cd402b7558adf371","slicer","tableRef","sliceProps","nextDayThreshold","headerAlignElRef","$000f37fb542d3ff1$export$9fcce6e2d16ec31d","S","buildRenderRange","isRangeAllDay","renderRange","endOfWeek","snapToWeek","startOfWeek","bh","lastMonthRenderStart","startOfMonth","ceil","bi","$000f37fb542d3ff1$export$a2ad67969be9f247","test","$000f37fb542d3ff1$export$b3c27e869d856b7","headerElRef","renderSimpleLayout","headerRowContent","bodyContent","sections","stickyHeaderDates","cc","isSticky","chunk","tableClassName","rowContent","liquid","content","ct","viewSpec","b$","isHeightAuto","collapsibleWidth","cols","renderHScrollLayout","dayMinWidth","ScrollGrid","pluginHooks","scrollGridImpl","Error","stickyFooterScrollbar","cb","chunks","ca","colGroups","$000f37fb542d3ff1$export$39eed66de95896e5","buildDayTableModel","$000f37fb542d3ff1$export$61e79f95d746b006","headerRef","dateProfileGenerator","headerContent","dayHeaders","bK","dates","headerDates","datesRepDistinctDays","contentArg","businessHours","dateSelection","eventStore","eventUiBases","tableColGroupNode","weekNumbers","daySeries","bO","bV"],"version":3,"file":"daygrid.5aac371d.js.map"}